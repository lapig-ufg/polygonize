services:
  poly:
    build: .
    environment: 
      - "PG_CONNECTION=PG: host=polypostgis port=5432 dbname=postgres user=postgres password=PoLyPostGRES"
      - "MONGO_CONNECTION=mongodb://mongopoly:27017"
      - "REGIAO=/data/shape/regions_v05_12_2023.shp"
      - "PASTURE=pasture_col9"
      - "VIGOR=pasture_vigor_col9"
      - "PASTURE_FILES=/data/pasture_col9/pasture_br_Y*_COL9_atlas.tif"
      - "PASTURE_PREFIX=/data/pasture_col9/pasture_br_Y"
      - "PASTURE_SUFIX=_COL9_atlas.tif"
      - "VIGOR_FILES=/data/pasture_vigor_col9/cvp_pasture_br_LAPIG_Y*_ATLAS.tif"
      - "VIGOR_PREFIX=/data/pasture_vigor_col9/cvp_pasture_br_LAPIG_Y"
      - "VIGOR_SUFIX=_ATLAS.tif"
    stdin_open: true  # Manter o stdin aberto
    tty: true         # Alocar um terminal
    volumes:
      - ./data:/data
    networks:
      - poly_network
  polypostgis:
    hostname: polypostgis
    container_name: polypostgis
    image: postgis/postgis:latest 
    shm_size: 8g
    ports:
      - "5440:5432"
    environment:
        - "POSTGRES_PASSWORD=PoLyPostGRES"
        - "POSTGRES_HOST_AUTH_METHOD=password"
    restart: on-failure 
    volumes:
        - postgis-data:/var/lib/postgresql/data
    healthcheck:
        test: curl --fail -s http://127.0.0.1:5432/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
    networks:
      - poly_network
  mongopoly:
    image: mongo:6-jammy
    hostname: mongopoly
    ports:
      - "27020:27017"
    volumes:
      - dbdata6:/data/db
    networks:
      - poly_network

networks:
  poly_network:
    external: true
    driver: bridge

volumes:
  postgis-data:
  dbdata6: